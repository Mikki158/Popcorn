<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Work\PopCornProject\PopCorn\Popcorn\PopCorn\</FILEPATH>
      <FILENAME>Ball.cpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'EBall_State' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>ABall::{ctor}</FUNCTION>
    <DECORATED>??0ABall@@QAE@XZ</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Work\PopCornProject\PopCorn\Popcorn\PopCorn\</FILEPATH>
      <FILENAME>Ball.cpp</FILENAME>
      <LINE>251</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ABall::Set_For_Test</FUNCTION>
    <DECORATED>?Set_For_Test@ABall@@QAEXXZ</DECORATED>
    <FUNCLINE>246</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Work\PopCornProject\PopCorn\Popcorn\PopCorn\</FILEPATH>
      <FILENAME>Ball.cpp</FILENAME>
      <LINE>385</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ABall::Set_On_Parachute</FUNCTION>
    <DECORATED>?Set_On_Parachute@ABall@@QAEXHH@Z</DECORATED>
    <FUNCLINE>369</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Work\PopCornProject\PopCorn\Popcorn\PopCorn\</FILEPATH>
      <FILENAME>Ball.cpp</FILENAME>
      <LINE>386</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>ABall::Set_On_Parachute</FUNCTION>
    <DECORATED>?Set_On_Parachute@ABall@@QAEXHH@Z</DECORATED>
    <FUNCLINE>369</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>